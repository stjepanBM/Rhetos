<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Rhetos.Deployment</name>
    </assembly>
    <members>
        <member name="T:Rhetos.Deployment.ApplicationInitialization">
            <summary>
            NOTE:
            This class does not conform to the standard IoC design pattern.
            It uses IoC container directly because it needs to handle a special scope control (separate database connections) and error handling.
            </summary>
        </member>
        <member name="M:Rhetos.Deployment.ApplicationInitialization.ExecuteInitializer(Autofac.IContainer,System.Type)">
            <summary>
            NOTE:
            This method does not conform to the standard IoC design pattern.
            It uses IoC container directly because it needs to handle a special scope control (separate database connections) and error handling.
            </summary>
        </member>
        <member name="M:Rhetos.Deployment.DataMigrationScriptsFromDisk.Load">
            <summary>
            The scripts are sorted by the intended execution order,
            respecting package dependencies and natural sort order by path.
            </summary>
        </member>
        <member name="F:Rhetos.Deployment.DeploymentConfiguration.PackagesConfigurationFileName">
            <summary>The file is placed in GetConfigurationFolder().</summary>
        </member>
        <member name="F:Rhetos.Deployment.DeploymentConfiguration.SourcesConfigurationFileName">
            <summary>The file is placed in GetConfigurationFolder().</summary>
        </member>
        <member name="M:Rhetos.Deployment.DeploymentConfiguration.GetConfigurationFolder">
            <summary>Folder where the config files are placed.</summary>
        </member>
        <member name="T:Rhetos.Deployment.IDataMigrationScriptsProvider">
            <summary>
            The scripts are sorted by the intended execution order.
            </summary>
        </member>
        <member name="M:Rhetos.Deployment.PackageSource.#ctor(System.String)">
            <summary>
            Available location options:
            1. Online nuget gallery ("http://..." or "https://...").
            2. Local folder or network folder with nuget packages.
            3. Package project's source folder (unpacked, useful for package development).
            </summary>
        </member>
        <member name="P:Rhetos.Deployment.PackageSource.ProvidedLocation">
            <summary>The original string that was provided in the configuration.
            It may be different from ProcessedLocation it a relative path is resolved, for example.</summary>
        </member>
        <member name="P:Rhetos.Deployment.PackageSource.ProcessedLocation">
            <summary>The processed location where the packages will be looked for.
            It may be different from ProvidedLocation it a relative path is resolved, for example.</summary>
        </member>
        <member name="P:Rhetos.Deployment.PackageSource.Path">
            <summary>
            Null, if the source is not a path.
            </summary>
        </member>
        <member name="P:Rhetos.Deployment.PackageSource.Uri">
            <summary>
            Null, if the source is not an URI.
            </summary>
        </member>
        <member name="P:Rhetos.Deployment.DeploymentUtility.InitializationLogProvider">
            <summary>To be used during system initialization while the IoC container is yet not built.
            In all other situations the ILogProvider should be resolved from the IoC container.</summary>
        </member>
        <member name="T:Rhetos.Deployment.PackageDownloader">
            <summary>
            Downloads and unpacks Rhetos packages, if not already downloaded or unpacked.
            Downloads dependent packages, where declare in the package's metadata file.
            </summary>
        </member>
        <member name="M:Rhetos.Deployment.PackageDownloader.GetPackages">
            <summary>
            Downloads the packages from the provided sources, if not already downloaded.
            Unpacks the packages, if not already unpacked.
            </summary>
        </member>
    </members>
</doc>
